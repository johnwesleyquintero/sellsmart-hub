{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install Dependencies (CI)", // Clean install
      "type": "shell",
      "command": "npm ci --prefer-offline",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      }
    },
    {
      "label": "Install Dev Dependencies (ESLint, Prettier, etc.)",
      "type": "shell",
      // Combined install commands
      "command": "npm install --save-dev eslint prettier @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-plugin-jest @types/papaparse --no-audit --no-fund",
      "group": "build",
      "presentation": { "reveal": "always", "panel": "shared" }
    },
    {
      "label": "Install App Dependencies",
      "type": "shell",
      // Note: --legacy-peer-deps might hide underlying dependency issues. Investigate if possible.
      "command": "npm install --save react-router-dom react-hook-form @testing-library/react @testing-library/jest-dom jest styled-components --legacy-peer-deps",
      "group": "build",
      "presentation": { "reveal": "always", "panel": "shared" }
    },
    {
      "label": "Clean NPM Cache",
      "type": "shell",
      "command": "npm cache clean --force",
      "problemMatcher": [] // No output matching needed
    },
    {
      "label": "Clear Jest Cache",
      "type": "shell",
      "command": "npx jest --clearCache --no-cache",
      "problemMatcher": []
    },
    {
      "label": "Run Tests (Coverage)",
      "type": "shell",
      "command": "npx jest --coverage",
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Run Tests (Watch)",
      "type": "shell",
      "command": "npm run test -- --watchAll=false", // Assumes 'test' script exists in package.json
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Lint & Fix",
      "type": "shell",
      "command": "npx eslint . --fix --max-warnings=0",
      "group": "test",
      "presentation": { "reveal": "always", "panel": "shared" },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "Lint (Quiet)",
      "type": "shell",
      "command": "npm run lint -- --quiet", // Assumes 'lint' script exists
      "group": "test",
      "presentation": { "reveal": "silent", "panel": "shared" }, // Runs quietly
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "Type Check (TSC)",
      "type": "shell",
      // Use tsc directly if typescript is a dev dependency, npx otherwise
      "command": "npx tsc --noEmit", // Or just "tsc --noEmit"
      "group": "build",
      "presentation": { "reveal": "always", "panel": "shared" },
      "problemMatcher": "$tsc"
    },
    {
      "label": "Run Dev Server",
      "type": "shell",
      "command": "npm run dev -- --port=3000", // Assumes 'dev' script exists
      "isBackground": true, // Marks it as a long-running process
      "presentation": { "reveal": "always", "panel": "dedicated" },
      "problemMatcher": {
        // Example: Watch for server start message (adjust pattern as needed)
        "owner": "custom",
        "pattern": {
          "regexp": "ready .* started server on .*port (\\d+)",
          "file": 1,
          "location": 1,
          "message": 1
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "starting server", // Adjust if needed
          "endsPattern": "ready .* started server" // Adjust if needed
        }
      }
    }
  ]
}
