{"numFailedTestSuites":25,"numFailedTests":8,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":24,"numTodoTests":0,"numTotalTestSuites":25,"numTotalTests":8,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1745943912263,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Cannot find module '@/lib/core-utils' from 'src/__tests__/lib/helpers/helpers.test.ts'\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { formatCurrency\u001b[33m,\u001b[39m generateId\u001b[33m,\u001b[39m truncateText } \u001b[36mfrom\u001b[39m \u001b[32m'@/lib/core-utils'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m\n     \u001b[90m 3 |\u001b[39m describe(\u001b[32m'helpers'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 4 |\u001b[39m   describe(\u001b[32m'formatCurrency'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (src/__tests__/lib/helpers/helpers.test.ts:1:1)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\lib\\helpers\\helpers.test.ts","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Cannot find module '@/lib/amazon-tools/dataProcessing' from 'src/__tests__/lib/dataProcessing/dataProcessing.test.ts'\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { processAmazonData } \u001b[36mfrom\u001b[39m \u001b[32m'@/lib/amazon-tools/dataProcessing'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m\n     \u001b[90m 3 |\u001b[39m describe(\u001b[32m'dataProcessing'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 4 |\u001b[39m   \u001b[36mconst\u001b[39m testData \u001b[33m=\u001b[39m [\u001b[0m\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (src/__tests__/lib/dataProcessing/dataProcessing.test.ts:1:1)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\lib\\dataProcessing\\dataProcessing.test.ts","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Cannot find module '@/lib/amazon-tools/amazon-algorithms' from 'src/__tests__/lib/calculations/amazon-calculations.test.ts'\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mAmazonAlgorithms\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'@/lib/amazon-tools/amazon-algorithms'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m\n     \u001b[90m 3 |\u001b[39m describe(\u001b[32m'Amazon Calculations'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 4 |\u001b[39m   describe(\u001b[32m'calculateOptimalPrice'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (src/__tests__/lib/calculations/amazon-calculations.test.ts:1:1)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\lib\\calculations\\amazon-calculations.test.ts","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\integration\\components\\interactions.test.tsx:17\n            (0, react_1.render)(<listing_quality_checker_1.default />);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\integration\\components\\interactions.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\ErrorBoundary\\ErrorBoundary.test.tsx:11\n            (0, react_1.render)(<error_boundary_1.default fallback={<div>Error</div>}>\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\ErrorBoundary\\ErrorBoundary.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\UnifiedDashboardHeader.test.tsx:17\n            (0, react_1.render)(<UnifiedDashboardHeader_1.UnifiedDashboardHeader {...mockProps}/>);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\UnifiedDashboardHeader.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\ManualFbaForm.test.tsx:29\n            (0, react_1.render)(<ManualFbaForm_1.default initialValues={initialValues} onSubmit={mockSubmit} onReset={mockReset}/>);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\ManualFbaForm.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    RangeError: Maximum call stack size exceeded\n\n    \u001b[0m \u001b[90m  5 |\u001b[39m\n     \u001b[90m  6 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'util'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   \u001b[36mconst\u001b[39m { \u001b[33mTextEncoder\u001b[39m\u001b[33m,\u001b[39m \u001b[33mTextDecoder\u001b[39m } \u001b[33m=\u001b[39m require(\u001b[32m'util'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m  8 |\u001b[39m   \u001b[36mreturn\u001b[39m {\n     \u001b[90m  9 |\u001b[39m     \u001b[33mTextEncoder\u001b[39m\u001b[33m:\u001b[39m \u001b[33mTextEncoder\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 10 |\u001b[39m     \u001b[33mTextDecoder\u001b[39m\u001b[33m:\u001b[39m \u001b[33mTextDecoder\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Runtime.requireMock (node_modules/jest-runtime/build/index.js:927:7)\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n      at src/__tests__/integration/api/endpoints.test.ts:7:40\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\integration\\api\\endpoints.test.ts","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\keyword-trend-analyzer.test.tsx:48\n            (0, react_1.render)(<keyword_trend_analyzer_1.default />);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\keyword-trend-analyzer.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\keyword-deduplicator.test.tsx:24\n            (0, react_1.render)(<keyword_deduplicator_1.default />);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\keyword-deduplicator.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\keyword-analyzer.test.tsx:41\n            (0, react_1.render)(<keyword_analyzer_1.default />);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\keyword-analyzer.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["useCsvParser"],"duration":10,"failureDetails":[{}],"failureMessages":["ReferenceError: mockBlob is not defined\n    at Object.<anonymous> (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts:18:17)\n    at Promise.then.completed (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at run (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"useCsvParser should parse valid CSV data correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should parse valid CSV data correctly"},{"ancestorTitles":["useCsvParser"],"duration":1,"failureDetails":[{}],"failureMessages":["ReferenceError: mockBlob is not defined\n    at Object.<anonymous> (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts:18:17)\n    at Promise.then.completed (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at run (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"useCsvParser should handle missing required headers","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle missing required headers"},{"ancestorTitles":["useCsvParser"],"duration":3,"failureDetails":[{}],"failureMessages":["ReferenceError: mockBlob is not defined\n    at Object.<anonymous> (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts:18:17)\n    at Promise.then.completed (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at run (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"useCsvParser should handle invalid row data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle invalid row data"},{"ancestorTitles":["useCsvParser"],"duration":0,"failureDetails":[{}],"failureMessages":["ReferenceError: mockBlob is not defined\n    at Object.<anonymous> (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts:18:17)\n    at Promise.then.completed (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at run (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"useCsvParser should handle empty CSV file","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle empty CSV file"},{"ancestorTitles":["useCsvParser"],"duration":1,"failureDetails":[{}],"failureMessages":["ReferenceError: mockBlob is not defined\n    at Object.<anonymous> (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts:18:17)\n    at Promise.then.completed (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at run (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"useCsvParser should handle file size limit","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle file size limit"},{"ancestorTitles":["useCsvParser"],"duration":1,"failureDetails":[{}],"failureMessages":["ReferenceError: mockBlob is not defined\n    at Object.<anonymous> (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts:18:17)\n    at Promise.then.completed (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at run (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"useCsvParser should handle percentage values correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle percentage values correctly"},{"ancestorTitles":["useCsvParser"],"duration":0,"failureDetails":[{}],"failureMessages":["ReferenceError: mockBlob is not defined\n    at Object.<anonymous> (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts:18:17)\n    at Promise.then.completed (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at run (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"useCsvParser should call onError callback when provided","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should call onError callback when provided"},{"ancestorTitles":["useCsvParser"],"duration":0,"failureDetails":[{}],"failureMessages":["ReferenceError: mockBlob is not defined\n    at Object.<anonymous> (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts:18:17)\n    at Promise.then.completed (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at run (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"useCsvParser should call onComplete callback when provided","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should call onComplete callback when provided"}],"endTime":1745943921748,"message":"  ● useCsvParser › should parse valid CSV data correctly\n\n    ReferenceError: mockBlob is not defined\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[90m// Mock File and Blob constructors\u001b[39m\n     \u001b[90m 17 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mFile\u001b[39m \u001b[33m=\u001b[39m mockFile\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mBlob\u001b[39m \u001b[33m=\u001b[39m mockBlob\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/lib/hooks/__tests__/use-csv-parser.test.ts:18:17)\n\n  ● useCsvParser › should handle missing required headers\n\n    ReferenceError: mockBlob is not defined\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[90m// Mock File and Blob constructors\u001b[39m\n     \u001b[90m 17 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mFile\u001b[39m \u001b[33m=\u001b[39m mockFile\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mBlob\u001b[39m \u001b[33m=\u001b[39m mockBlob\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/lib/hooks/__tests__/use-csv-parser.test.ts:18:17)\n\n  ● useCsvParser › should handle invalid row data\n\n    ReferenceError: mockBlob is not defined\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[90m// Mock File and Blob constructors\u001b[39m\n     \u001b[90m 17 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mFile\u001b[39m \u001b[33m=\u001b[39m mockFile\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mBlob\u001b[39m \u001b[33m=\u001b[39m mockBlob\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/lib/hooks/__tests__/use-csv-parser.test.ts:18:17)\n\n  ● useCsvParser › should handle empty CSV file\n\n    ReferenceError: mockBlob is not defined\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[90m// Mock File and Blob constructors\u001b[39m\n     \u001b[90m 17 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mFile\u001b[39m \u001b[33m=\u001b[39m mockFile\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mBlob\u001b[39m \u001b[33m=\u001b[39m mockBlob\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/lib/hooks/__tests__/use-csv-parser.test.ts:18:17)\n\n  ● useCsvParser › should handle file size limit\n\n    ReferenceError: mockBlob is not defined\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[90m// Mock File and Blob constructors\u001b[39m\n     \u001b[90m 17 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mFile\u001b[39m \u001b[33m=\u001b[39m mockFile\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mBlob\u001b[39m \u001b[33m=\u001b[39m mockBlob\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/lib/hooks/__tests__/use-csv-parser.test.ts:18:17)\n\n  ● useCsvParser › should handle percentage values correctly\n\n    ReferenceError: mockBlob is not defined\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[90m// Mock File and Blob constructors\u001b[39m\n     \u001b[90m 17 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mFile\u001b[39m \u001b[33m=\u001b[39m mockFile\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mBlob\u001b[39m \u001b[33m=\u001b[39m mockBlob\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/lib/hooks/__tests__/use-csv-parser.test.ts:18:17)\n\n  ● useCsvParser › should call onError callback when provided\n\n    ReferenceError: mockBlob is not defined\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[90m// Mock File and Blob constructors\u001b[39m\n     \u001b[90m 17 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mFile\u001b[39m \u001b[33m=\u001b[39m mockFile\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mBlob\u001b[39m \u001b[33m=\u001b[39m mockBlob\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/lib/hooks/__tests__/use-csv-parser.test.ts:18:17)\n\n  ● useCsvParser › should call onComplete callback when provided\n\n    ReferenceError: mockBlob is not defined\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[90m// Mock File and Blob constructors\u001b[39m\n     \u001b[90m 17 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mFile\u001b[39m \u001b[33m=\u001b[39m mockFile\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   global\u001b[33m.\u001b[39m\u001b[33mBlob\u001b[39m \u001b[33m=\u001b[39m mockBlob\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/lib/hooks/__tests__/use-csv-parser.test.ts:18:17)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\hooks\\__tests__\\use-csv-parser.test.ts","startTime":1745943915410,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\fba-calculator.test.tsx:37\n            (0, react_1.render)(<toast_1.ToastProvider>\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\fba-calculator.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\description-editor.test.tsx:25\n            (0, react_1.render)(<description_editor_1.default />);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\description-editor.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\DataCard.test.tsx:11\n            (0, react_1.render)(<DataCard_1.default>Test Content</DataCard_1.default>);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\DataCard.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\CsvUploader.test.tsx:22\n            (0, react_1.render)(<CsvUploader_1.default onUploadSuccess={mockOnUploadSuccess}/>);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\CsvUploader.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\CsvDataMapper.test.tsx:35\n            (0, react_1.render)(<CsvDataMapper_1.default csvHeaders={mockHeaders} targetMetrics={mockTargets} onMappingComplete={mockOnComplete} onCancel={mockOnCancel}/>);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\CsvDataMapper.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\CampaignCard.test.tsx:24\n            (0, react_1.render)(<CampaignCard_1.default campaign={mockCampaign}/>);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\CampaignCard.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\competitor-analyzer.test.tsx:25\n            (0, react_1.render)(<competitor_analyzer_1.CompetitorAnalyzer onAnalyzeAction={mockOnAnalyze}/>);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\competitor-analyzer.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\AmazonToolsUI.test.tsx:10\n            (0, react_1.render)(<listing_quality_checker_1.default />);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\AmazonToolsUI.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\acos-calculator.test.tsx:21\n            (0, react_1.render)(<acos_calculator_1.default />);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\amazon-seller-tools\\acos-calculator.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\SharedUI.test.tsx:11\n                (0, react_1.render)(<ui_1.Button>Test</ui_1.Button>);\n                                    ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\SharedUI.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\error-boundary.test.tsx:43\n            const { container } = (0, react_1.render)(<error_boundary_1.default fallback={<div>Error</div>} onError={mockReportError}>\n                                                      ^\n\n    SyntaxError: Unexpected token '<'\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\__tests__\\components\\error-boundary.test.tsx","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Cannot find module '@/lib/amazon-tools/csv-utils' from 'src/lib/amazon-tools/__tests__/csv-utils.test.ts'\n\n    \u001b[0m \u001b[90m  7 |\u001b[39m   \u001b[33m|\u001b[39m \u001b[32m'asin'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m  8 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m \u001b[36mimport\u001b[39m {\n     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 10 |\u001b[39m   processAmazonCsv\u001b[33m,\u001b[39m\n     \u001b[90m 11 |\u001b[39m   safeParseNumber\u001b[33m,\u001b[39m\n     \u001b[90m 12 |\u001b[39m   validateAsinFormat\u001b[33m,\u001b[39m\u001b[0m\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (src/lib/amazon-tools/__tests__/csv-utils.test.ts:9:1)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\lib\\amazon-tools\\__tests__\\csv-utils.test.ts","startTime":1745943927225,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745943927225,"message":"  ● Test suite failed to run\n\n    Cannot find module '@/lib/logger' from 'src/middleware.ts'\n\n    Require stack:\n      src/middleware.ts\n      src/middleware.test.ts\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { logger } \u001b[36mfrom\u001b[39m \u001b[32m'@/lib/logger'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[36mget\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'@vercel/edge-config'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { getToken } \u001b[36mfrom\u001b[39m \u001b[32m'next-auth/jwt'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 4 |\u001b[39m \u001b[36mimport\u001b[39m type { \u001b[33mNextRequest\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'next/server'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (src/middleware.ts:1:1)\n      at Object.<anonymous> (src/middleware.test.ts:2:1)\n","name":"C:\\Users\\johnw\\OneDrive\\Desktop\\portfolio\\src\\middleware.test.ts","startTime":1745943927225,"status":"failed","summary":""}],"wasInterrupted":false}
